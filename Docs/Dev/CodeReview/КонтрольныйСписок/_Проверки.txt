Путь к оригинальному файлу
/VinKekFish/main_tests/Задачи и другое/Проверки/Проверки.txt

Для конкретной проверки см. "АлгоритмПроверки.txt"

// В программе произведена проверка в отладчике пошагово: что должно быть в каждой переменной на следующем шаге? Что реально есть после шага?
// Упрощение программы для заданных данных и условий и тестирование уже с этим
// Упрощение программы для тестирования взаимовлияний

1. Выход за диапазон допустимых индексов, особенно, при работе с сырыми адресами

2. Тайминг-атаки, список https://vincryptoos.github.io/errors/errorsconding.html
2.1. Отсутствие условий, зависимых от ключа или секретных состояний

3. При проектировании криптографии, список https://vincryptoos.github.io/errors/errorsmain.html

4. Очистка произведена верно
4.1. Все данные обнулены
4.2. Память освобождена или обнулена ссылка
4.3. Данные не числятся ни в каких списках
4.4. Обнулённые или очищенные данные нигде не используются. Везде, где было нужно, были получены именно копии, а не ссылка на обнулённую область
	Для этого нужно отследить все копии данного массива
4.5. Функции очистки описаны и понятно, как их вызвать. IDisposable реализованы там, где это имеет смысл.
4.6. Конфиденциальные данные не под сборщиком мусора либо идёт хоть какая-то общая очистка памяти после сборщика мусора
4.7. Все параметры, которые нужны для очистки, проинициализированны
4.8. Повторный вызов очистки обработан верно

5. Ключ, векторы инициализации полностью используются и используются только там, где надо

6. Описаны рекомендуемые параметры или примеры использования. Понятно, как создать все объекты и какой они длины. Все параметры вообще описаны и их назначение понятно.

7. Простые ошибки
7.1. Нет ошибок завышения/занижения на единицу.
7.2. Параметры переданы по имени.
7.3. Массивы правильно разбиты на объекты и эти объекты не пересекаются и вкладываются в массив
7.4. Невозможно передать неверные параметры или описаны требования к верным параметрам
7.5. Данные успевают сгенерироваться. Одни и те же данные не используются повторно (например, за циклом сгенерированны данные, которые должны генерироваться каждую итерацию цикла)
7.6. Циклы завершаются

8. Проверены на правильность все многопоточные методы
8.1. Нет потоков, которые могли бы ждать потоки, которые уже завершились
8.2. Все потоки завершаются
8.3. Нет взаимоблокировок (все вложенные блокировки получаются в одном и том же порядке)
8.4. Счётчики используют Interlocked
8.5. Переменные, используемые разными потоками, помечены как volatile
8.6. Все переменные, используемые разными потоками, синхронизированны одним и тем же примитивом в разных местах или везде используют атомарные операции

9. Написанный код соответствует алгоритму и/или псевдокоду, в том числе, в именах переменных (если это важно) либо имена переменных из псевдокода не используются в других целях (не вводят в заблуждение).

10. Все данные проинициализированны.
10.1. Все используемые переменные и поля проинициализированны
10.2. Все данные сейчас находятся в допустимом состоянии и не удалены
10.3. Все поля объектов проинициализированны до их использования
10.4. Все значения, передаваемые в функции и поля объекта, используются.
10.5. Все значения зависят от правильных значений и изменяются в правильное время (изменяются один раз или циклически и т.п.; зависят от конкретных значений и только от них)
10.6. В каком состоянии находятся объекты? Какие состояния они должны пройти? Есть ли объекты только для чтения или только для записи, только для очистки?
10.7. Данные правильно проинициализированны при повторном вызове функций

11. Общие ошибки процесса разработки
11.1. Все методы протестированы во всех режимах и классах эквивалентности, обеспечено комбинаторное покрытие, покрытие по ветвям или иные виды покрытия. Обеспечено тестирование многократных вызовов
11.2. Нет использования того, что не должно использоваться: устаревшая криптография, дополнительные библиотеки, которые можно отключить и т.п.
11.3. Функции, которые есть в программе, следуют одной задаче. Нет навязывания лишних функций.
11.4. Весь ввод-вывод продокументирован
11.5. Все данные помечены по уровням конфиденциальности и их вывод производится в соответствии с этим уровнем.
11.6. Доступ к данным авторизован. Логирование правильно берёт авторизацию и может работать без авторизации
11.7. Логирование и сообщения об ошибках есть и позволяют понять, что происходит с программой.
11.8. Ловушки для контроля ошибок есть (предусловия, постусловия и т.п.).
11.9. Обеспечен вывод прогресса вычислений на экран
11.10. Программа хорошо взаимодействует с внешними СЗИ. В частности, процессы обновления отделены от вычислительных процессов. Все домены описаны и легко вносятся (как поддомены).

12. Ошибки учитываются
12.1. Ошибки файловой системы. В том числе, создаются резервные копии важных файлов при их изменении
12.2. Ошибки выделения памяти.
12.3. Сетевые ошибки, в том числе, разрывы и восстановления связи, повторные отсылки информации. В том числе, обеспечена возможность повторной отсылки или отказа от отсылки при слишком длительной отсылке.



