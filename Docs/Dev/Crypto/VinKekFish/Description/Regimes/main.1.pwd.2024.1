Главный режим зашифрования ключа без скрытых потоков

Концепция.
1. Каскадная губка: обратная связь с хешем. Размер хеша используется для дополнительного выравнивания информации. Данные шифруются в режиме зашифрования ключа.
2. Гаммирование. Для убыстрения шифрования, здесь гамма берётся в режиме шифрования обычной информации.
3. Реверсирование (побайтовое).
4. VinKekFish с обратной связью и хешем. Данные шифруются в режиме зашифрования ключа.
5. Перемешивание.
6. Каскадная губка: обратная связь без хеширования.
7. Реверсирование.
8. VinKekFish: обратная связь без хеширования.

Параметр алгоритма:
p0. VinKekFish (из обоих пунктов) может быть проинициализирован с разным количеством случайных таблиц перестановок (p0p) и разным количеством шагов (p0s).


Описание:

0. Файл содержит заголовок, загаммированный специальным несекретным блоком. Блок является частью синхропосылки. Заголовок состоит из описателя режима шифрования (строка с её длиной; байт количества случайных таблиц перестановок), блоком для гаммирования, и блоком синхропосылки (также с указанной длиной). Длины указываются в сжатом формате (старший бит - признак наличия ещё одного байта. Если 0 - значит этот байт является последним байтом).

1.
1.1. Генерация каскадной губки. Ввод ключа, длиной klen0=tall*wide*64*2+16 байтов [Key0Csc] (16 байтов - ключ для первичной инициализации ThreeFish) с количеством холостых ходов, равных режиму генерации ключа. Ключ равен по размеру сумме размеров внутренних состояний губок и должен их полностью проинциализировать с запасом.
1.2. Гаммирование с обратной связью с количеством холостых ходов, равных режиму генерации ключа.
1.3. Смена режима шифрования. Вычисление хеша и его запись в файл, хеш имеет минимальную длину hlen0min=tall*wide*64*2 байта. Хеш должен выравнять файл на границу 65536 байтов. Однако, так как у нас ещё будет один хеш, то этот хеш выравнивает на границу 65536-hlen2 (65536-4*512*K).
Хеш не может быть меньше, чем tall*wide*64*2 байта.

2.
Гаммирование происходит суммой двух губок. Обе губки работают в режиме шифрования обычной информации: это дополнительное шифрование, которое отбивает два гаммирования с обратной связью и здесь особая стойкость не нужна. Хеш не вычисляется. Ключи длиной tall*64*2+16 и 4*512*K байтов [Key1Vkf, Key1Csc].

3. Порядок байтов во всём файле (кроме заголовка) изменяется на противоположный.

4. Работает VinKekFish с обратной связью. Ключ длиной klen2=4*512*K байтов [Key2Vkf]. Хеш длиной hlen2=4*512*K. Эта длина позволяет использовать всю стойкость VinKekFish, а не только номинальную, и, при этом, позволяет избежать коллизионных атак, также задействовав почти всю стойкость VinKekFish. Хеш, разумеется, вычисляется в другом режиме шифрования.
VinKekFish работает в режиме генерации ключа шифрования (с уменьшенным блоком).

5. Перемешивание с помощью каскадной губки побайтово. Губка работает в обычном режиме генерации (при перемешивании каскадная губка реализована именно так). Перемешивание происходит всего файла целиком, включая хеши. Ключ длиной tall*wide*64*2+16 [Key3PCsc].
Эта же губка используется сначала для инициализации таблиц перестановок для VinKekFish (сначала для 2-ого пункта, затем для 4-ого и 8-ого) также в обычном режиме генерации. После этого, она переинициализируется и перемешивает этот пункт.

6. Работа каскадной губки с обратной связью.  Длина ключа: tall*64*2+16 байтов. Далее губка используется в режиме обычного шифрования с обратной связью. Хеша нет. [Key4Csc]

7. Порядок байтов во всём файле (кроме заголовка) изменяется на противоположный.

8. Работает VinKekFish с обратной связью в режиме обычного шифрования [Key5Vkf]. Длина ключа 4*512*K.

