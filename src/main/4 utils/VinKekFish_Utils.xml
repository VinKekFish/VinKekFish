<?xml version="1.0"?>
<doc>
    <assembly>
        <name>4 utils</name>
    </assembly>
    <members>
        <member name="T:VinKekFish_Utils.console.ConsoleOptions">
            <summary>Класс для временного переопределения параметров консоли</summary>
            <remarks>Использование:
            <para>Отнаследовать класс. В конструкторе задать нужные условия. Если нужно, переопределить Disposing()</para>
            Применять с ключевым словом using
            <para>using var console_opts = new ConsoleOptionsChild();</para>
            </remarks>
        </member>
        <member name="F:VinKekFish_Utils.console.ConsoleOptions.InitialBackgroundColor">
            <summary>Первоначальный цвет фона консоли</summary>
        </member>
        <member name="F:VinKekFish_Utils.console.ConsoleOptions.InitialForegroundColor">
            <summary>Первоначальный цвет текста консоли</summary>
        </member>
        <member name="M:VinKekFish_Utils.Utils.calcAlignment(System.IntPtr,System.Int32)">
            <summary>Функция для расчёта выравнивания</summary>
            <param name="size">Размер массива для выравнивания</param>
            <param name="alignment">Размер границ, на который выравнивается</param>
            <returns>Выравненное значение size</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.getAlignment64(cryptoprime.BytesBuilderForPointers.Record)">
            <summary>Выравнивает массив Record по значению 64-ре байта. Массив должен быть выделен с запасом 64 байта. Проще использовать alignmentDegree в AllocHGlobal_AllocatorForUnsafeMemory</summary>
            <param name="a">Массив для выравнивания. Должен быть выделен с запасом 64-ре байта</param>
            <returns>Выравненный массив (может как совпадать с "a", так и нет)</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.SecureCompare(cryptoprime.BytesBuilderForPointers.Record,cryptoprime.BytesBuilderForPointers.Record)">
            <summary>Сравнивает две записи: well - эталонная запись, подлежит защите</summary>
            <param name="well">Эталонная запись, с которой сравнивается запись devil</param>
            <param name="devil">Вторая запись для сравнения. Вторая запись - запись, переданная злоумышленником</param>
            <returns>true, если значения массивов в записях равны</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.SecureCompareFast(cryptoprime.BytesBuilderForPointers.Record,cryptoprime.BytesBuilderForPointers.Record)">
            <summary>Безопасно сравнивает два массива. Функция немного хуже, но раз в 5 быстрее, чем SecureCompare</summary>
            <param name="r1">Первый массив</param>
            <param name="r2">Второй массив</param>
            <returns><see langword="true"/>, если массивы совпадают.</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.SecureCompareFast(cryptoprime.BytesBuilderForPointers.Record,cryptoprime.BytesBuilderForPointers.Record,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Безопасно сравнивает два массива. Функция немного хуже, но раз в 5 быстрее, чем SecureCompare</summary>
            <param name="r1">Первый массив</param>
            <param name="r2">Второй массив</param>
            <param name="start1">Начальный индекс для сравнения в первом массиве</param>
            <param name="start2">Начальный индекс для сравнения во втором массиве</param>
            <param name="len1">Длина подмассива для сравнивания</param>
            <param name="len2">Длина подмассива для сравнивания</param>
            <returns><see langword="true"/>, если массивы совпадают.</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.SecureCompareFast(System.IntPtr,System.IntPtr,System.Byte*,System.Byte*)">
            <summary>езопасно сравнивает два массива. Функция немного хуже, но раз в 5 быстрее, чем SecureCompare</summary>
            <param name="len1">Длина массива r1</param>
            <param name="len2">Длина массива r2</param>
            <param name="r1">Массив для сравнения</param>
            <param name="r2">Второй массив для сравнения</param>
            <returns>true, если значения равны</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.ArrayToHex(System.Byte*,System.IntPtr)">
            <summary>Переводит массив в строковое представление для удобства отладки</summary>
            <param name="buffer">Массив для перевода в строковое представление</param>
            <param name="len">Длина массива</param>
            <returns>Строка, закодированная в шестнадцатиричном виде</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.getLogFileName(System.String)">
            <summary>Получает имя лог-файла в файловой системе для ArrayToFile</summary>
            <param name="logName">Логическое имя лог-файла</param>
        </member>
        <member name="M:VinKekFish_Utils.Utils.ArrayToFile(System.Byte*,System.IntPtr,System.String)">
            <summary>Записывает массив в файл</summary>
            <param name="buffer">Массив для логирования</param>
            <param name="len">Длина массива</param>
            <param name="logName">Логическое имя лог-файла</param>
        </member>
        <member name="M:VinKekFish_Utils.Utils.ArrayToFile(System.Byte[],System.String)">
            <summary>Записывает массив в файл</summary>
            <param name="buffer">Массив для логирования</param>
            <param name="logName">Логическое имя лог-файла</param>
        </member>
        <member name="M:VinKekFish_Utils.Utils.ArrayToFile(System.Int32[],System.String)">
            <summary>Записывает массив в файл</summary>
            <param name="buffer">Массив для логирования</param>
            <param name="logName">Логическое имя лог-файла</param>
        </member>
        <member name="T:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.InputElement">
            <summary>Представляет элементы типа 'file' и 'cmd', содержащие настройки для получения энтропии</summary>
        </member>
        <member name="M:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.InputElement.getInputElemement(VinKekFish_Utils.ProgramOptions.Options_Service.Element,VinKekFish_Utils.ProgramOptions.Options.Block,System.String)">
            <summary>Абстрактная фабрика, которая создаёт элементы 'file', 'cmd' и другие</summary>
            <param name="parent">Родительский элемент настроек</param>
            <param name="block">Блок, описыающий данный элемент настроек</param>
            <param name="canonicalName">Канонизированное имя блока (нижний регистр, триммированная строка)</param>
            <returns>Список созданных блоков</returns>
            <exception cref="T:VinKekFish_Utils.ProgramOptions.Options_Service.Options_Service_Exception">Если есть ошибки в настройках, выдаёт исключение</exception>
        </member>
        <member name="M:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.InputElement.getNewInputFileElement(VinKekFish_Utils.ProgramOptions.Options_Service.Element,VinKekFish_Utils.ProgramOptions.Options.Block,System.String)">
            <summary>Создаёт элемент типа InputFileElement и добавляет его в result</summary>
            <param name="parent">Блок-родитель создаваемого элемента настроек</param>
            <param name="block">Блок опций, описывающий данный элемент</param>
            <param name="path">Необязательный параметр. Строка с именем файла, который описывается данным элементом. Если null, то строка берётся из block.Name</param>
        </member>
        <member name="T:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.InputFileElement">
            <summary>Представляет источник энтропии, являющийся файлом (или совместимым с ним устройством)</summary>
        </member>
        <member name="T:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.InputCmdElement">
            <summary>Представляет источник энтропии, являющийся файлом (или совместимым с ним устройством)</summary>
        </member>
        <member name="T:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.InputDirElement">
            <summary>Представляет источник энтропии, являющийся директорией с использованием FileSystemWatcher для наблюдения за вновь появляющимися файлами</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.EntropyValues.min">
            <summary>max >= min, EME >= max, avg >= min. EME и max всегда могут быть равны нулю, даже если min или max не равно нулю. Все значения могут быть равны нулю. Нулевые значения означают, что источник энтропии вообще может не дать энтропии.
            <para>min - оценка минимального количества битов, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            <para>max - оценка максимального количества битов, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            <para>EME - оценка максимального количества битов в благоприятных условиях, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии, который затруднительно перехватить с помощью прослушивания электромагнитных излучений, прослушивания сетевого траффика и других атак по побочным каналам</para>
            <para>avg - оценка максимального количества битов в благоприятных условиях, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            </summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.EntropyValues.max">
            <summary>max >= min, EME >= max, avg >= min. EME и max всегда могут быть равны нулю, даже если min или max не равно нулю. Все значения могут быть равны нулю. Нулевые значения означают, что источник энтропии вообще может не дать энтропии.
            <para>min - оценка минимального количества битов, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            <para>max - оценка максимального количества битов, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            <para>EME - оценка максимального количества битов в благоприятных условиях, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии, который затруднительно перехватить с помощью прослушивания электромагнитных излучений, прослушивания сетевого траффика и других атак по побочным каналам</para>
            <para>avg - оценка максимального количества битов в благоприятных условиях, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            </summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.EntropyValues.EME">
            <summary>max >= min, EME >= max, avg >= min. EME и max всегда могут быть равны нулю, даже если min или max не равно нулю. Все значения могут быть равны нулю. Нулевые значения означают, что источник энтропии вообще может не дать энтропии.
            <para>min - оценка минимального количества битов, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            <para>max - оценка максимального количества битов, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            <para>EME - оценка максимального количества битов в благоприятных условиях, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии, который затруднительно перехватить с помощью прослушивания электромагнитных излучений, прослушивания сетевого траффика и других атак по побочным каналам</para>
            <para>avg - оценка максимального количества битов в благоприятных условиях, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            </summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.EntropyValues.avg">
            <summary>max >= min, EME >= max, avg >= min. EME и max всегда могут быть равны нулю, даже если min или max не равно нулю. Все значения могут быть равны нулю. Нулевые значения означают, что источник энтропии вообще может не дать энтропии.
            <para>min - оценка минимального количества битов, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            <para>max - оценка максимального количества битов, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            <para>EME - оценка максимального количества битов в благоприятных условиях, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии, который затруднительно перехватить с помощью прослушивания электромагнитных излучений, прослушивания сетевого траффика и других атак по побочным каналам</para>
            <para>avg - оценка максимального количества битов в благоприятных условиях, которое нужно получить из этого источника для того, чтобы получить хотя бы один бит энтропии.</para>
            </summary>
        </member>
        <member name="M:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.Interval.getTime(System.String)">
            <summary>Распарсить строку вида "1s"</summary>
            <param name="timeString">Строка для парсинга</param>
            <returns>-1 - если строку не удалось распарсить. Иначе - время в миллисекундах.</returns>
        </member>
        <member name="M:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.Interval.getTime(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Int64},System.Int64@)">
            <summary>Распарсить строку типа "1s", получив из неё время</summary>
            <param name="timeString">Строка для парсинга</param>
            <param name="factor">Модификатор единицы времени из списка TimeFactors</param>
            <param name="time">Возвращаемый результат: время в миллисекундах</param>
            <returns>true - если время получено успешно. false - если время не было распознано</returns>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.Interval.Flags.date">
            <summary>Добавлять при чтении из источника энтропии точное время чтения (как дополнительный источник энтропии)</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.Interval.Flags.ignored">
            <summary>Информация не поступает в губку</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.Interval.Flags.log">
            <summary>Выводить ли всю информацию, полученную из источника энтропии, в лог-файл</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.Interval.Flags.watchInLog">
            <summary>Показывать ли время от времени в логах количество полученных из источника байтов</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Output.out_random">
            <summary>Определяет, в какой директории будет находится файл "random" с выходом программы</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Output.Random.UnixStream.Path.dir">
            <summary>Определяет директорию для выхода потоков с псевдослучайными криптостойкими данными</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Output.Random.UnixStream.Path.file">
            <summary>Путь к файлу random</summary>
        </member>
        <member name="M:VinKekFish_Utils.ProgramOptions.Options_Service.#ctor(VinKekFish_Utils.ProgramOptions.Options,System.Boolean)">
            <summary>Создаёт объект настроек, полученных из файла</summary>
            <param name="options">Парсер опций. new Options(fileString), где fileString - содержимое файла настроек</param>
            <param name="doNotOutputWarningsToConsole">Если false, то выводит на Console.Error предупреждения</param>
        </member>
        <member name="M:VinKekFish_Utils.ProgramOptions.Options_Service.Element.SelectBlock(VinKekFish_Utils.ProgramOptions.Options.Block,System.String)">
            <summary>Проходит по дочерним блокам. Вызывается прямо в конструкторе, поэтому этот вызов происходит до вызова дочерних конструкторов.</summary>
            <param name="block">Подчинённый блок опций для парсинга</param>
            <param name="canonicalName">Каноническое имя подчинённого блока block</param>
        </member>
        <member name="M:VinKekFish_Utils.ProgramOptions.Options_Service.Root.SelectBlock(VinKekFish_Utils.ProgramOptions.Options.Block,System.String)">
            <summary>Функция, разбирающая блоки из парсера на конкретные блоки настроек</summary>
            <param name="block">Подблок из парсера</param>
            <param name="canonicalName">Каноническое имя блока: пробелы и табуляции удалены, регистр преобразован в нижний</param>
        </member>
    </members>
</doc>
