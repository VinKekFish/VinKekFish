<?xml version="1.0"?>
<doc>
    <assembly>
        <name>4 utils</name>
    </assembly>
    <members>
        <member name="M:VinKekFish_Utils.Utils.calcAlignment(System.IntPtr,System.Int32)">
            <summary>Функция для расчёта выравнивания</summary>
            <param name="size">Размер массива для выравнивания</param>
            <param name="alignment">Размер границ, на который выравнивается</param>
            <returns>Выравненное значение size</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.getAlignment64(cryptoprime.BytesBuilderForPointers.Record)">
            <summary>Выравнивает массив Record по значению 64-ре байта. Массив должен быть выделен с запасом 64 байта. Проще использовать alignmentDegree в AllocHGlobal_AllocatorForUnsafeMemory</summary>
            <param name="a">Массив для выравнивания. Должен быть выделен с запасом 64-ре байта</param>
            <returns>Выравненный массив (может как совпадать с "a", так и нет)</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.SecureCompare(cryptoprime.BytesBuilderForPointers.Record,cryptoprime.BytesBuilderForPointers.Record)">
            <summary>Сравнивает две записи: well - эталонная запись, подлежит защите</summary>
            <param name="well">Эталонная запись, с которой сравнивается запись devil</param>
            <param name="devil">Вторая запись для сравнения. Вторая запись - запись, переданная злоумышленником</param>
            <returns>true, если значения массивов в записях равны</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.SecureCompareFast(cryptoprime.BytesBuilderForPointers.Record,cryptoprime.BytesBuilderForPointers.Record)">
            <summary>Безопасно сравнивает два массива. Функция немного хуже, но раз в 5 быстрее, чем SecureCompare</summary>
            <param name="r1">Первый массив</param>
            <param name="r2">Второй массив</param>
            <returns><see langword="true"/>, если массивы совпадают.</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.SecureCompareFast(cryptoprime.BytesBuilderForPointers.Record,cryptoprime.BytesBuilderForPointers.Record,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Безопасно сравнивает два массива. Функция немного хуже, но раз в 5 быстрее, чем SecureCompare</summary>
            <param name="r1">Первый массив</param>
            <param name="r2">Второй массив</param>
            <param name="start1">Начальный индекс для сравнения в первом массиве</param>
            <param name="start2">Начальный индекс для сравнения во втором массиве</param>
            <param name="len1">Длина подмассива для сравнивания</param>
            <param name="len2">Длина подмассива для сравнивания</param>
            <returns><see langword="true"/>, если массивы совпадают.</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.SecureCompareFast(System.IntPtr,System.IntPtr,System.Byte*,System.Byte*)">
            <summary>езопасно сравнивает два массива. Функция немного хуже, но раз в 5 быстрее, чем SecureCompare</summary>
            <param name="len1">Длина массива r1</param>
            <param name="len2">Длина массива r2</param>
            <param name="r1">Массив для сравнения</param>
            <param name="r2">Второй массив для сравнения</param>
            <returns>true, если значения равны</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.ArrayToHex(System.Byte*,System.IntPtr)">
            <summary>Переводит массив в строковое представление для удобства отладки</summary>
            <param name="buffer">Массив для перевода в строковое представление</param>
            <param name="len">Длина массива</param>
            <returns>Строка, закодированная в шестнадцатиричном виде</returns>
        </member>
        <member name="M:VinKekFish_Utils.Utils.getLogFileName(System.String)">
            <summary>Получает имя лог-файла в файловой системе для ArrayToFile</summary>
            <param name="logName">Логическое имя лог-файла</param>
        </member>
        <member name="M:VinKekFish_Utils.Utils.ArrayToFile(System.Byte*,System.IntPtr,System.String)">
            <summary>Записывает массив в файл</summary>
            <param name="buffer">Массив для логирования</param>
            <param name="len">Длина массива</param>
            <param name="logName">Логическое имя лог-файла</param>
        </member>
        <member name="M:VinKekFish_Utils.Utils.ArrayToFile(System.Byte[],System.String)">
            <summary>Записывает массив в файл</summary>
            <param name="buffer">Массив для логирования</param>
            <param name="logName">Логическое имя лог-файла</param>
        </member>
        <member name="M:VinKekFish_Utils.Utils.ArrayToFile(System.Int32[],System.String)">
            <summary>Записывает массив в файл</summary>
            <param name="buffer">Массив для логирования</param>
            <param name="logName">Логическое имя лог-файла</param>
        </member>
        <member name="T:VinKekFish_Utils.ProgramOptions.Options_Service.Input.Entropy.InputFileElement">
            <summary>Представляет источник энтропии, являющийся файлов (или совместимым с ним устройством)</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Output.out_random">
            <summary>Определяет, в какой директории будет находится файл "random" с выходом программы</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Output.Random.UnixStream.Path.dir">
            <summary>Определяет директорию для выхода потоков с псевдослучайными криптостойкими данными</summary>
        </member>
        <member name="F:VinKekFish_Utils.ProgramOptions.Options_Service.Output.Random.UnixStream.Path.file">
            <summary>Путь к файлу random</summary>
        </member>
        <member name="M:VinKekFish_Utils.ProgramOptions.Options_Service.Root.SelectBlock(VinKekFish_Utils.ProgramOptions.Options.Block,System.String)">
            <summary>Функция, разбирающая блоки из парсера на конкретные блоки настроек</summary>
            <param name="block">Подблок из парсера</param>
            <param name="canonicalName">Каноническое имя блока: пробелы и табуляции удалены, регистр преобразован в нижний</param>
        </member>
    </members>
</doc>
